% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_topography_NEDUSA.R
\name{extract_topography_NEDUSA}
\alias{extract_topography_NEDUSA}
\title{Extract elevation, slope, and aspect from National Elevation Dataset
\var{NED} for \pkg{SOILWAT2} applications}
\usage{
extract_topography_NEDUSA(
  x,
  crs = 4326,
  path,
  file_datasets = list(elev = "ned_1s.tif", slope = file.path("terrain",
    "slope_ned_1s.tif"), aspect = file.path("terrain", "aspect_ned_1s.tif")),
  units_slope = c("degrees", "radians"),
  units_aspect = c("degrees", "radians"),
  south_aspect = c(180, 0),
  method = "simple",
  flat_lt_slope = 0
)
}
\arguments{
\item{x}{A numerical two-dimensional object
(a \code{matrix}, \code{array}, or \code{data.frame})
with longitude/X, latitude/Y as columns;
a \code{\link[sp:SpatialPoints-class]{sp::SpatialPoints}} object; or
a \var{sf} object with a point geometry,
i.e., an object with a class \var{sf} or \var{sfc}.}

\item{crs}{An object which is a \var{crs} or from which one can be derived.
\code{x} can
be numeric as a \var{EPSG} number;
a character string as a \var{wkt};
a character string as a \var{proj4} (not recommended because outdated);
or of a class including
  \code{\link[raster:Raster-classes]{raster::Raster}},
  \code{\link[sp:Spatial-class]{sp::Spatial}},
  \code{\link[sp:CRS-class]{sp::CRS}},
  or a \code{\link[sf]{sf}} or \code{\link[sf]{sfc}} class.}

\item{path}{A character string. The path to the folder containing
\var{NED-1arcsec} files, see \code{file_datasets}.}

\item{file_datasets}{A named list. The paths/\var{filenames} of
the \var{NED} files relative to \code{path}. The names are
\var{"elev"}, \var{"slope"}, and \var{"aspect"}. At least one must exists.}

\item{units_slope}{A character string. \var{"degrees"} or \var{"radians"}.}

\item{units_aspect}{A character string. \var{"degrees"} or \var{"radians"}.}

\item{south_aspect}{An integer value. The value indicating a south aspect
in degrees, either 0 or 180 degrees. See details.}

\item{method}{A character string passed to \code{\link[raster]{extract}}.}

\item{flat_lt_slope}{A numeric value. Slope values less than
\code{flat_lt_slope} are set to 0 and aspect values to \code{NA};
units are the same as the slope dataset.}
}
\value{
A \code{data.frame} with one row per \code{locations} and up to
  three columns named like the elements of existing \code{file_datasets},
  i.e., \var{"elev"} in units \var{[m a.s.l.]},
  \var{"slope"} in units \var{[0 - 90 degree]}, and
  \var{"aspect"} in units
  \var{[degree; South = 0, E = -90, N = ±180, W = 90; no aspect = NA]}.
}
\description{
Extract elevation, slope, and aspect from National Elevation Dataset
\var{NED} for \pkg{SOILWAT2} applications
}
\section{Details}{

  The raster values are expected to be in units of
  \var{[m a.s.l.]} for elevation,
  degrees or radians for slope with a
  range of \var{[0 - 90 degree]} or \var{[0 - pi/2]}, and
  degrees or radians for aspect with an orientation of either
  \var{[North = 0 = 360, E = 90, S = 180, W = 270]} and
  no aspect indicated by one of \var{\{NA, 999, < 0\}} or
  \var{[South = 0, E = -90, N = ±180, W = 90]} and
  no aspect indicated by one of \var{\{NA, 999\}}, or
  respectively in radians.
}

\section{Notes}{

  First, obtain \var{NED}, e.g.,
  via \code{\link[FedData]{get_ned}};
  then, derive slope and aspect,
  e.g., via \code{\link[raster]{terrain}}
  and make sure that gridcells without aspect are correctly encoded.
}

\examples{
\dontrun{
if (requireNamespace("FedData") && curl::has_internet()) {
  label_ned <- "ned_1s_example"
  path_ned <- "."
  filenames_ned_examples <- list(
    elev = paste0(label_ned, "_NED_1.tif"),
    slope = paste0("slope_", label_ned, "_NED_1.tif"),
    aspect = paste0("aspect_", label_ned, "_NED_1.tif")
  )

  locations <- rSW2st::as_points(
    matrix(data = c(-120.325, -120.328, 43.328, 43.242), nrow = 2),
    to_class = "sp",
    crs = 4326
  )
  extent_polygon <- FedData::polygon_from_extent(
    x = 1.1 * raster::extent(locations),
    proj4string = "+init=epsg:4326"
  )

  ### Download NED
  ned_1s_example <- FedData::get_ned(
    template = extent_polygon,
    label = label_ned,
    res = 1,
    extraction.dir = path_ned
  )

  ### Derive slope and aspect
  for (opt in c("slope", "aspect")) {
    tmp <- raster::terrain(
      x = ned_1s_example,
      opt = opt,
      unit = "degrees",
      filename = filenames_ned_examples[[opt]],
      datatype = "FLT4S",
      options = c("COMPRESS=DEFLATE", "ZLEVEL=9", "INTERLEAVE=BAND")
    )
  }

  ### Get values
  vals_topo <- extract_topography_NEDUSA(
    locations,
    path = path_ned,
    file_datasets = filenames_ned_examples,
    south_aspect = 180,
    method = "simple"
  )

  # Fix column names for output
  cns <- c(elev = "ELEV_m", slope = "Slope_deg", aspect = "Aspect_deg")
  colnames(vals_topo) <- cns[colnames(vals_topo)]
  vals_topo

  # Clean up
  unlink(file.path(path_ned, unlist(filenames_ned_examples)))
}
}

}
