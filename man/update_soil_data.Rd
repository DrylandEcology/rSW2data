% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/soils_functions.R
\name{update_soil_data}
\alias{update_soil_data}
\alias{add_soil_layer}
\alias{dissolve_soil_layer}
\title{Add or dissolve a soil layer/horizon}
\usage{
add_soil_layer(x, target_cm, depths_cm, method = c("interpolate", "exhaust"))

dissolve_soil_layer(
  x,
  target_cm,
  depths_cm,
  method = c("interpolate", "exhaust")
)
}
\arguments{
\item{x}{A two-dimensional numeric \code{matrix}
or \code{data.frame}.
Rows represent sites (or variables);
columns represent soil layers/horizons.}

\item{target_cm}{A numeric value. The lower depth in centimeter of the
soil horizon/layer that is to be added or dissolved.}

\item{depths_cm}{A numeric vector. The lower depths in centimeters of the
existing soil horizons/layers.}

\item{method}{A character string. The method by which variable values are
assigned to a new or dissolved soil horizon/layer:
\itemize{
  \item \var{"interpolate"} calculates the mean across affected soil
    horizons/layers weighted by their widths.
  \item \var{"exhaust"} calculates updated values so that their sum
    across affected soil horizons/layers remains constant.
}}
}
\value{
An updated copy of \code{x}.
}
\description{
Add or dissolve a soil layer/horizon
}
\section{Details}{

  Soil layers/horizons are added independently for each row; i.e.,
  rows can represent either sites or variables as long as all rows can
  be subjected to the same \code{method} option.


  \code{add_soil_layer} inserts a new soil layer by splitting
  an existing one into two layers.


  With \code{method == "interpolate"},
  adding a new shallowest layer (\code{target_cm < depths_cm}) or
  a new deepest layer (\code{target_cm > depths_cm})
  will copy values from the previously shallowest or, respectively, deepest
  layer.


  \code{dissolve_soil_layer} combines/dissolves a soil layer with a lower
  depth of \code{target_cm} with the next deeper layer.
  The deepest (or only) soil layer cannot be removed in which case
  the code issues a warning and returns an unmodified copy of \code{x}.
}

\examples{
soil_layers <- c(8, 20, 150)
N <- length(soil_layers)

### Examples where rows represent variables
xsoils <- data.frame(
  sand = c(0.3, 0.35, 0.4),
  clay = c(0.1, 0.15, 0.1)
)

t(add_soil_layer(
  t(xsoils),
  target_cm = 15,
  depths_cm = soil_layers,
  method = "interpolate"
))

t(dissolve_soil_layer(
  t(xsoils),
  target_cm = 20,
  depths_cm = soil_layers,
  method = "interpolate"
))


### Examples where rows represent sites
soil_data <- cbind(
  sand = t(data.frame(
    site1 = c(0.5, 0.55, NA),
    site2 = c(0.3, 0.35, 0.4)
  )),
  TranspCoeff = t(data.frame(
    site1 = c(0.9, 0.1, NA),
    site2 = c(0.7, 0.1, 0.2)
  ))
)
colnames(soil_data) <- paste0(
  rep(c("sand", "TranspCoeff"), each = N),
  "_L",
  seq_len(N)
)

## Add new 0-5 cm layer, i.e., split the existing 0-8 cm layer into
## two layers of 0-5 cm and 5-8 cm
add_soil_layer(
  soil_data[, paste0("sand_L", seq_len(N))],
  target_cm = 5,
  depths_cm = soil_layers,
  method = "interpolate"
)

## Add new 20-80 cm layer, i.e., split the existing 20-150 cm layer into
## two layers of 20-80 cm and 80-150 cm
add_soil_layer(
  soil_data[, paste0("TranspCoeff_L", seq_len(N))],
  target_cm = 80,
  depths_cm = soil_layers,
  method = "exhaust"
)

## Add new 150-200 cm layer, i.e., extend the soil profile
add_soil_layer(
  soil_data[, paste0("sand_L", seq_len(N))],
  target_cm = 200,
  depths_cm = soil_layers,
  method = "interpolate"
)


## Remove the shallowest 0-8 cm layer, i.e., combine layers 0-8 cm and
## 8-20 cm into a new 0-20 cm layer
dissolve_soil_layer(
  soil_data[, paste0("sand_L", seq_len(N))],
  target_cm = 8,
  depths_cm = soil_layers,
  method = "interpolate"
)

## Remove the 8-20 cm layer, i.e., combine layers 8-20 cm and
## 20-150 cm into a new 8-150 cm layer
dissolve_soil_layer(
  soil_data[, paste0("TranspCoeff_L", seq_len(N))],
  target_cm = 20,
  depths_cm = soil_layers,
  method = "exhaust"
)

## Attempt to remove the deepest 20-150 cm layer, but not possible to combine
dissolve_soil_layer(
  soil_data[, paste0("sand_L", seq_len(N))],
  target_cm = 150,
  depths_cm = soil_layers,
  method = "interpolate"
)

}
\seealso{
\code{\link{update_soil_profile}}
}
