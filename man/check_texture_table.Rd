% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/soils_check.R
\name{check_texture_table}
\alias{check_texture_table}
\title{Check availability of soil texture values for a specified number of layers}
\usage{
check_texture_table(
  table_texture,
  n_layers,
  vars = c("sand", "clay"),
  vars_notzero = NULL
)
}
\arguments{
\item{table_texture}{A two-dimensional numeric object.
Rows represent sites and columns soil texture variables for each
soil layers \var{1, ..., n}. See examples.}

\item{n_layers}{A numeric vector. The number of soil layers at each site.}

\item{vars}{A vector of character strings. Soil texture variables to check
as base name of the column names of \code{table_texture}. See examples.}

\item{vars_notzero}{A vector of character strings. Variables,
as base name of the column names of \code{table_texture}, that are
checked against being zero.}
}
\value{
A list with three elements
  \itemize{
    \item \var{checks_passed}:
      A logical value. \code{TRUE} if no missing values.

    \item \var{missing}: See below

    \item \var{zero}:
      See below; \code{NULL} if \code{vars_notzero} is \code{NULL}.
  }

  The latter two elements are named lists each with elements:
  \itemize{
    \item \var{cond_N}:
      An integer n x p matrix for n sites and p variables
      (\code{vars} or \code{vars_notzero} respectively).
      The number of missing/zero values for a site \var{i} and
      variable \var{k} among the specified soil layers (\code{n_layers[i]}).

    \item \var{is_cond_anylayer}:
      A logical n x p matrix for n sites and p variables
      (\code{vars} or \code{vars_notzero} respectively).
      \code{TRUE} for a site \var{i} if at least one value of
      variable \var{k} is missing/zero among the specified
      soil layers (\code{n_layers[i]}).

    \item \var{is_cond_pctlayer}: \code{cond_N} divided by \code{n_layers}

    \item \var{ids_sites_cond_anylayer}:
      An integer vector of site indices (row number in \code{table_texture})
      for which at least one variable in at least one layer is missing/zero.

    \item \var{ids_sites_cond_alllayers}:
      An integer vector of site indices (row number in \code{table_texture})
      for which at least one variable is missing/zero in all layers.

    \item \var{ids_sites_cond_somelayers}:
      \var{ids_sites_cond_anylayer} without
      \var{ids_sites_cond_alllayers}
  }
}
\description{
Check availability of soil texture values for a specified number of layers
}
\examples{
soils <- data.matrix(data.frame(
  sand_L1 = c(0.828, 0.963, NA),
  clay_L1 = c(0.065, 0.03, 0.03),
  sand_L2 = c(0.57, NA, NA),
  clay_L2 = c(0.25, 0.03, 0.03),
  sand_L3 = c(0, NA, NA),
  clay_L3 = c(0, NA, NA)
))
N_horizons <- rep(3, 3)

texture_checks <- check_texture_table(
  table_texture = soils,
  n_layers = N_horizons,
  vars = c("sand", "clay"),
  vars_notzero = c("sand", "clay")
)

# Does our soils table have no issues?
texture_checks[["checks_passed"]]

if (!texture_checks[["checks_passed"]]) {
  #--- What are issues with missing data?
  check_missing <- texture_checks[["missing"]]

  # How many sites have at least one missing value per variable?
  apply(check_missing[["is_cond_anylayer"]], 2, sum)

  # Tabulate sites for number of layers with any missing sand values against
  # proportion of layers with any missing sand values
  addmargins(table(
    missing_pct = check_missing[["is_cond_pctlayer"]][, "sand"],
    missing_N = check_missing[["cond_N"]][, "sand"]
  ))

  # Tabulate sites number of layers with only missing values against
  # proportion of layers with only missing values
  ids <- check_missing[["ids_sites_cond_alllayers"]]
  addmargins(table(
    missing_pct = check_missing[["is_cond_pctlayer"]][ids, ],
    missing_N = check_missing[["cond_N"]][ids, ]
  ))

  #--- What are issues with zero data?
  check_zero <- texture_checks[["zero"]]

  # How many sites have at least one zero value per variable?
  apply(check_zero[["is_cond_anylayer"]], 2, sum)
}

}
